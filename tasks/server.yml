---
- name: Set kong pkg download variables
  set_fact:
    kong_deb_pkg_url: "{{ kong_deb_pkg_url_pre_0_11_x }}"
    kong_rpm_pkg_url: "{{ kong_rpm_pkg_url_pre_0_11_x }}"
    kong_deb_pkg:     "kong-{{ kong_version }}.{{ ansible_distribution_release }}_all.deb"
    kong_rpm_pkg:     "kong-{{ kong_version }}.el7.noarch.rpm"
  when: kong_version is version_compare('0.11.0', '<')

# Debian
- name: Download kong deb package | Debian
  get_url:
    url: "{{ kong_deb_pkg_url }}"
    dest: "/var/tmp/{{ kong_deb_pkg }}"
    validate_certs: no
    force: no
  when: ansible_os_family|lower == 'debian'

- name: Install kong prerequisites (Debian/Ubuntu only)
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items: "{{ kong_prereqs }}"
  when: ansible_os_family|lower == 'debian'

- name: Install kong | Debian
  apt:
    deb:   "/var/tmp/{{ kong_deb_pkg }}"
    state: present
  notify:
    - Restart kong
  when: ansible_os_family|lower == 'debian'

# RedHat
- name: Download kong rpm package | RedHat
  get_url: url="{{ kong_rpm_pkg_url }}" dest="/var/tmp/{{ kong_rpm_pkg }}" validate_certs=no
  when: ansible_os_family|lower == 'redhat'

- name: Install kong | RedHat
  yum:
    name: "/var/tmp/{{ kong_rpm_pkg }}"
    disable_gpg_check: yes
    state: present
  notify:
    - Restart kong
  when: ansible_os_family|lower == 'redhat'

- name: Start firewalld
  systemd:
    name: firewalld
    enabled: yes
    state: started
  when: ansible_os_family|lower == 'redhat' and kong_configure_firewalld

- name: Configure firewalld for kong
  firewalld:
    port: 8000/tcp
    permanent: yes
    immediate: yes
    state: enabled
  when: ansible_os_family|lower == 'redhat' and kong_configure_firewalld

- name: Create logs directory
  file:
    path: "{{ kong_log_dir }}"
    state: directory
    owner: root
    group: root

- name: Update logrotate cron script
  template:
    src:  cron.logrotate.j2
    dest: /etc/cron.daily/logrotate
    owner: root
    group: root
    mode: 0700

# By default, logrotate is configured to be run by cron daily. This task enables
# logrotate to run hourly to be able to really rotate logs hourly.
# This is particularly useful for high traffic environments like prod and perf
# where we might want to rotate nginx logs more agressively since the logs
# are shipped to ELK stack so does not need to fill up disk space.
- name: Copy logrotate script to /etc/cron.hourly
  template:
    src:  cron.logrotate.j2
    dest: /etc/cron.hourly/logrotate
    owner: root
    group: root
    mode: 0700

- name: Create logrotate config for kong logs
  template:
    src:  logrotate.j2
    dest: /etc/logrotate.d/kong
    owner: root
    group: root
    mode: 0644

- name: Set SELinux context for log files for logrotate
  sefcontext:
    ftype: a
    target: "{{ kong_log_dir }}(/.*)?"
    setype: var_log_t
    state: present
  when: kong_configure_selinux

- name: Apply new SELinux file context to filesystem
  command: "restorecon -rv {{ kong_log_dir }}"
  when: kong_configure_selinux

- name: Check for supported kong versions
  fail: msg="Kong {{ kong_version }} no longer supported"
  when: kong_version is version_compare('0.11.0', '<')

- name: Kong Server Config & Start
  include_tasks: "server-config.yml"
