---

- name: Initialise route_exists variable
  set_fact:
    route_exists: "{% if matched_route_id != '' %}{{ true }}{% else %}{{ false }}{% endif %}"

#- debug: var=matched_route_id
#- debug: var=route_exists
#- debug: var=kong_route_config

- name: Initialize kong_route_config_new
  set_fact:
    kong_route_config_new: {}

- name: Sanitize kong_route_config dict
  set_fact:
    kong_route_config_new: "{{ kong_route_config_new|combine({item.key: item.value}) }}"
  when: item.key not in ['name']
  with_dict: "{{ kong_route_config }}"

- name: Include service id in route obj config
  set_fact:
    _kong_route_obj: "{{ kong_route_config_new|combine({'service': {'id': route_service_id}}) }}"

- debug: msg="Kong route object {{ _kong_route_obj }}"

- name: Add new route object to kong service object
  uri:
    url:    "{{ kong_admin_api_url|default('http://localhost:8001') }}/routes/"
    method: POST
    body:   "{{ _kong_route_obj }}"
    status_code: "201,409"
    body_format: json
  register: route
  when: not route_exists
  until: route is succeeded
  retries: 10
  delay: 5

- debug: msg="WARN - 409 Conflict detected - {{ route }}"
  when: route.status is defined and route.status == 409

#- debug: var=route

# Route id stored in temporary file created here is used by plugin.yml
- name: Store id of new route object added in a temp file
  template:
    src: new_route_id.j2
    dest: "/tmp/{{ kong_route_config.name }}_route.id"
  delegate_to: 127.0.0.1
  become: false
  when: not route_exists

- debug: msg="Similar route object already exists for {{ kong_route_config.service }} service"
  when: route_exists

- name: Update matched route object of kong service object
  uri:
    url:    "{{ kong_admin_api_url|default('http://localhost:8001') }}/routes/{{ matched_route_id }}"
    method: PATCH
    body:   "{{ _kong_route_obj }}"
    status_code: "200"
    body_format: json
  register: route
  when: route_exists
  until: route is succeeded
  retries: 10
  delay: 5
