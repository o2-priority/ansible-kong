---

- name: Initialise consumer_exists variable
  set_fact:
    consumer_exists: false

- name: Set consumer_exists if consumer object already exists
  set_fact:
    consumer_exists: true
  when: kong_consumer_config.username in consumers.json.data|map(attribute='username')

- name: Create temp consumer object request body file
  template:
    src: consumer_obj.j2
    dest: /tmp/{{ kong_consumer_config.username }}_consumer.json
  delegate_to: 127.0.0.1
  become: false

- name: Add consumer object to kong
  uri:
    url:    "{{ kong_admin_api_url|default('http://localhost:8001') }}/consumers/"
    method: POST
    #body:   "{{ kong_consumer_config }}"
    body:   "{{ lookup('file','/tmp/' + kong_consumer_config.username + '_consumer.json') }}"
    status_code: "201"
    body_format: json
  register: c_add
  when: not consumer_exists
  until: c_add is succeeded
  retries: 10
  delay: 5

#- debug: var=c_add

- debug: msg="{{ kong_consumer_config.username }} consumer object already exists - ({{ consumers.json.data|map(attribute='username')|join(',') }})"
  when: consumer_exists

- name: Update consumer object configured in kong
  uri:
    url:    "{{ kong_admin_api_url|default('http://localhost:8001') }}/consumers/{{ kong_consumer_config.username }}"
    method: PATCH
    #body:   "{{ kong_consumer_config }}"
    body:   "{{ lookup('file','/tmp/' + kong_consumer_config.username + '_consumer.json') }}"
    status_code: "200"
    body_format: json
  register: c_update
  when: consumer_exists
  until: c_update is succeeded
  retries: 10
  delay: 5

#- debug: var=c_update

# Configure plugins for Consumer
- name: Consumer Plugin Config | {{ outer_item.plugin|upper }}
  include_tasks: consumer_{{ outer_item.name }}.yml
  with_items: "{{ kong_consumer_config.plugins|default([]) }}"
  loop_control:
    loop_var: outer_item
